name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v3

      - name: Создание .env файла
        run: |
          echo "DB_NAME_DOCKER=${{ secrets.DB_NAME_DOCKER }}" > .env
          echo "DB_LOGIN_DOCKER=${{ secrets.DB_LOGIN_DOCKER }}" >> .env
          echo "DB_PASSWORD_DOCKER=${{ secrets.DB_PASSWORD_DOCKER }}" >> .env
          echo "DADATA_API_KEY=${{ secrets.DADATA_API_KEY }}" >> .env
          echo "DADATA_SECRET_KEY=${{ secrets.DADATA_SECRET_KEY }}" >> .env
          echo "WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}" >> .env
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          cat .env

      - name: Копирование docker-compose.yml
        run: |
          cp CRUD/docker-compose.yml .

      - name: Логин в Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Сборка Docker-образа
        run: |
          echo "Сборка Docker-образа..."
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-web:latest -f CRUD/Dockerfile .
          echo "Сборка завершена."

      - name: Пуш Docker-образа на Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-web:latest

      - name: Copy docker-compose and env file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "CRUD/docker-compose.yml,.env"
          target: "/home/${{ secrets.SERVER_USER }}/"

      - name: Деплой на сервере
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cat /home/mega/.env
            docker-compose --env-file /home/mega/.env config
            docker-compose down
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-web:latest
            docker-compose --env-file /home/mega/.env up -d
            docker image prune -f